{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilyas\\\\Desktop\\\\Interiores\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// Importamos React y el hook useState\nimport React, { useState } from 'react';\n\n// Importamos la función que genera el diseño desde un archivo de servicios (probablemente usa una API como Replicate)\nimport { generateDesign } from './services/designService';\n\n// Importamos los componentes hijos\nimport DesignForm from './components/DesignForm';\nimport ResultDisplay from './components/ResultDisplay';\nimport LoadingIndicator from './components/LoadingIndicator';\n\n// Importamos los estilos generales de la aplicación\nimport './styles/App.css';\n\n// Definimos el componente principal de la aplicación\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estados para manejar los datos\n  const [selectedFile, setSelectedFile] = useState(null); // Archivo de imagen original\n  const [previewUrl, setPreviewUrl] = useState(null); // URL de vista previa de la imagen\n  const [selectedStyle, setSelectedStyle] = useState(''); // Estilo seleccionado (ej: moderno, minimalista)\n  const [selectedRoom, setSelectedRoom] = useState(''); // Tipo de habitación (ej: cocina, dormitorio)\n  const [resultImage, setResultImage] = useState(null); // Imagen del resultado generado por la IA\n  const [isLoading, setIsLoading] = useState(false); // Indica si está cargando\n  const [error, setError] = useState(null); // Texto de error (si ocurre alguno)\n  const [step, setStep] = useState('upload'); // Controla qué se muestra: 'upload' o 'result'\n\n  // Función para manejar la subida de una imagen\n  const handleFileChange = event => {\n    const file = event.target.files[0]; // Tomamos el primer archivo\n    if (file) {\n      setSelectedFile(file); // Guardamos el archivo original\n      setPreviewUrl(URL.createObjectURL(file)); // Creamos una URL para mostrarlo en pantalla\n      setStep('upload'); // Nos aseguramos de estar en la vista de formulario\n      setResultImage(null); // Reiniciamos el resultado anterior\n    }\n  };\n\n  // Función que se llama cuando el usuario cambia el tipo de habitación\n  const handleRoomChange = event => {\n    setSelectedRoom(event.target.value);\n  };\n\n  // Función que se llama al hacer clic en el botón \"Generar diseño\"\n  const handleSubmit = async event => {\n    event.preventDefault(); // Evita que se recargue la página\n\n    // Validación: comprobamos si falta algo\n    if (!selectedFile || !selectedStyle || !selectedRoom) {\n      setError(\"Por favor, completa todos los campos antes de generar el diseño.\");\n      return;\n    }\n\n    // Mostramos la animación de carga y limpiamos errores anteriores\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Llamamos a la función que genera el diseño usando IA\n      const result = await generateDesign(selectedFile, selectedStyle, selectedRoom);\n      setResultImage(result.result); // Guardamos la imagen generada\n      setStep('result'); // Cambiamos a la vista de resultado\n    } catch (err) {\n      setError('Error al generar el diseño. Por favor, inténtalo de nuevo.');\n      console.error(err);\n    } finally {\n      setIsLoading(false); // Ocultamos la animación de carga \n    }\n  };\n\n  // Función que permite volver a intentar (volver al formulario)\n  const handleTryAgain = () => {\n    setStep('upload'); // Volvemos a la vista de formulario\n  };\n\n  // Función que permite ver otro diseño distinto manteniendo la imagen actual\n  const handleNextDesign = () => {\n    setResultImage(null); // Quitamos el diseño actual\n    setStep('upload'); // Volvemos al formulario\n  };\n\n  // Renderizado principal del componente\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redise\\xF1a tu interior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [step === 'upload' && /*#__PURE__*/_jsxDEV(DesignForm, {\n        previewUrl: previewUrl // URL de vista previa de la imagen\n        ,\n        selectedStyle: selectedStyle // Estilo seleccionado\n        ,\n        selectedRoom: selectedRoom // Tipo de habitación seleccionada      \n        ,\n        isLoading: isLoading // Indica si se está generando un diseño\n        ,\n        error: error // Mensaje de error si ocurre alguno      \n        ,\n        onFileChange: handleFileChange // Función para manejar el cambio de imagen\n        ,\n        onStyleChange: e => setSelectedStyle(e.target.value) // Función para manejar el cambio de estilo\n        ,\n        onRoomChange: handleRoomChange // Función para manejar el cambio de habitación\n        ,\n        onSubmit: handleSubmit // Función que se ejecuta al hacer clic en \"Generar diseño\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), step === 'result' && resultImage && /*#__PURE__*/_jsxDEV(ResultDisplay, {\n        resultImage: resultImage // Imagen generada por la IA\n        ,\n        onTryAgain: handleTryAgain // Volver a intentar con el mismo estilo\n        ,\n        onNextDesign: handleNextDesign // Ver otro diseño diferente\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n// Exportamos el componente para que pueda ser usado en index.js\n_s(App, \"copanT7nog87NbfcT4SA/x3ogII=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","generateDesign","DesignForm","ResultDisplay","LoadingIndicator","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","selectedStyle","setSelectedStyle","selectedRoom","setSelectedRoom","resultImage","setResultImage","isLoading","setIsLoading","error","setError","step","setStep","handleFileChange","event","file","target","files","URL","createObjectURL","handleRoomChange","value","handleSubmit","preventDefault","result","err","console","handleTryAgain","handleNextDesign","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFileChange","onStyleChange","e","onRoomChange","onSubmit","onTryAgain","onNextDesign","_c","$RefreshReg$"],"sources":["C:/Users/ilyas/Desktop/Interiores/frontend/src/App.jsx"],"sourcesContent":["// Importamos React y el hook useState\r\nimport React, { useState } from 'react';\r\n\r\n// Importamos la función que genera el diseño desde un archivo de servicios (probablemente usa una API como Replicate)\r\nimport { generateDesign } from './services/designService';\r\n\r\n// Importamos los componentes hijos\r\nimport DesignForm from './components/DesignForm';\r\nimport ResultDisplay from './components/ResultDisplay';\r\nimport LoadingIndicator from './components/LoadingIndicator';\r\n\r\n// Importamos los estilos generales de la aplicación\r\nimport './styles/App.css';\r\n\r\n// Definimos el componente principal de la aplicación\r\nfunction App() {\r\n  // Estados para manejar los datos\r\n  const [selectedFile, setSelectedFile] = useState(null);         // Archivo de imagen original\r\n  const [previewUrl, setPreviewUrl] = useState(null);             // URL de vista previa de la imagen\r\n  const [selectedStyle, setSelectedStyle] = useState('');         // Estilo seleccionado (ej: moderno, minimalista)\r\n  const [selectedRoom, setSelectedRoom] = useState('');           // Tipo de habitación (ej: cocina, dormitorio)\r\n  const [resultImage, setResultImage] = useState(null);           // Imagen del resultado generado por la IA\r\n  const [isLoading, setIsLoading] = useState(false);              // Indica si está cargando\r\n  const [error, setError] = useState(null);                       // Texto de error (si ocurre alguno)\r\n  const [step, setStep] = useState('upload');                     // Controla qué se muestra: 'upload' o 'result'\r\n\r\n  // Función para manejar la subida de una imagen\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0]; // Tomamos el primer archivo\r\n    if (file) {\r\n      setSelectedFile(file);                         // Guardamos el archivo original\r\n      setPreviewUrl(URL.createObjectURL(file));      // Creamos una URL para mostrarlo en pantalla\r\n      setStep('upload');                             // Nos aseguramos de estar en la vista de formulario\r\n      setResultImage(null);                          // Reiniciamos el resultado anterior\r\n    }\r\n  };\r\n\r\n  // Función que se llama cuando el usuario cambia el tipo de habitación\r\n  const handleRoomChange = (event) => {\r\n    setSelectedRoom(event.target.value);\r\n  };\r\n\r\n  // Función que se llama al hacer clic en el botón \"Generar diseño\"\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault(); // Evita que se recargue la página\r\n\r\n    // Validación: comprobamos si falta algo\r\n    if (!selectedFile || !selectedStyle || !selectedRoom) {\r\n      setError(\"Por favor, completa todos los campos antes de generar el diseño.\");\r\n      return;\r\n    }\r\n\r\n    // Mostramos la animación de carga y limpiamos errores anteriores\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      // Llamamos a la función que genera el diseño usando IA\r\n      const result = await generateDesign(selectedFile, selectedStyle, selectedRoom);\r\n      setResultImage(result.result); // Guardamos la imagen generada\r\n      setStep('result');             // Cambiamos a la vista de resultado\r\n    } catch (err) {\r\n      setError('Error al generar el diseño. Por favor, inténtalo de nuevo.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false); // Ocultamos la animación de carga \r\n    }\r\n  };\r\n\r\n  // Función que permite volver a intentar (volver al formulario)\r\n  const handleTryAgain = () => {\r\n    setStep('upload'); // Volvemos a la vista de formulario\r\n  };\r\n\r\n  // Función que permite ver otro diseño distinto manteniendo la imagen actual\r\n  const handleNextDesign = () => {\r\n    setResultImage(null); // Quitamos el diseño actual\r\n    setStep('upload');    // Volvemos al formulario\r\n  };\r\n\r\n  // Renderizado principal del componente\r\n  return (\r\n    <div className='app-container'>\r\n      {/* Cabecera */}\r\n      <header>\r\n        <h1>Rediseña tu interior</h1>\r\n      </header>\r\n\r\n      {/* Contenido principal */}\r\n      <main>\r\n        {/* Mostramos el formulario si estamos en la etapa \"upload\" */}\r\n        {step === 'upload' && (\r\n          <DesignForm\r\n            previewUrl={previewUrl}              // URL de vista previa de la imagen\r\n            selectedStyle={selectedStyle}        // Estilo seleccionado\r\n            selectedRoom={selectedRoom}          // Tipo de habitación seleccionada      \r\n            isLoading={isLoading}                // Indica si se está generando un diseño\r\n            error={error}                        // Mensaje de error si ocurre alguno      \r\n            onFileChange={handleFileChange}      // Función para manejar el cambio de imagen\r\n            onStyleChange={e => setSelectedStyle(e.target.value)} // Función para manejar el cambio de estilo\r\n            onRoomChange={handleRoomChange}      // Función para manejar el cambio de habitación\r\n            onSubmit={handleSubmit}              // Función que se ejecuta al hacer clic en \"Generar diseño\"\r\n          />\r\n        )}\r\n\r\n        {/* Mostramos el resultado si estamos en la etapa \"result\" y hay una imagen */}\r\n        {step === 'result' && resultImage && (\r\n          <ResultDisplay\r\n            resultImage={resultImage}            // Imagen generada por la IA\r\n            onTryAgain={handleTryAgain}          // Volver a intentar con el mismo estilo\r\n            onNextDesign={handleNextDesign}      // Ver otro diseño diferente\r\n          />\r\n        )}\r\n\r\n        {/* Mostramos el indicador de carga si isLoading es true */}\r\n        {isLoading && <LoadingIndicator />}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Exportamos el componente para que pueda ser usado en index.js\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}