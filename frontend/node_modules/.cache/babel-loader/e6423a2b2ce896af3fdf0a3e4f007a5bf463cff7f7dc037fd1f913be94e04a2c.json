{"ast":null,"code":"//Aquí defines cómo se comunica tu frontend con el backend Flask\n\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n/**\r\n * Sends a request to generate a new room design\r\n * @param {File} imageFile - The uploaded image file\r\n * @param {String} style - The selected style (Modern, Industrial, etc.)\r\n * @param {String} roomType - The selected room type (Living Room, Office, etc.)\r\n * @returns {Promise} - Promise resolving to the API response object\r\n */\n\nexport const generateDesign = async (imageFile, style, roomType) => {\n  try {\n    //Step 1: First upload the image to get URL\n    const formData = new FormData();\n    formData.append('file', imageFile);\n\n    //Assuming you have an endpoint to upload images\n    const uploadResponse = await axios.post(`${API_URL}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const imageUrl = uploadResponse.data.url;\n\n    //Step 2: Send the image URL along with style and room type to generate design\n    const response = await axios.post(`${API_URL}/generate`, {\n      image: imageUrl,\n      style: style,\n      room: roomType\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error in generateDesign service:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","generateDesign","imageFile","style","roomType","formData","FormData","append","uploadResponse","post","headers","imageUrl","data","url","response","image","room","error","console"],"sources":["C:/Users/ilyas/Desktop/Interiores/frontend/src/services/designService.js"],"sourcesContent":["//Aquí defines cómo se comunica tu frontend con el backend Flask\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n/**\r\n * Sends a request to generate a new room design\r\n * @param {File} imageFile - The uploaded image file\r\n * @param {String} style - The selected style (Modern, Industrial, etc.)\r\n * @param {String} roomType - The selected room type (Living Room, Office, etc.)\r\n * @returns {Promise} - Promise resolving to the API response object\r\n */\r\n\r\nexport const generateDesign = async (imageFile, style, roomType) => {\r\n    try{\r\n        //Step 1: First upload the image to get URL\r\n        const formData = new FormData();\r\n        formData.append('file', imageFile);\r\n\r\n        //Assuming you have an endpoint to upload images\r\n        const uploadResponse = await axios.post(`${API_URL}/upload`, formData, {\r\n            headers:{\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n\r\n        const imageUrl = uploadResponse.data.url;\r\n\r\n        //Step 2: Send the image URL along with style and room type to generate design\r\n        const response = await axios.post(`${API_URL}/generate`,{\r\n            image: imageUrl,\r\n            style: style,\r\n            room: roomType,\r\n        });\r\n\r\n        return response.data;\r\n       }catch (error){\r\n        console.error('Error in generateDesign service:', error);\r\n        throw error;\r\n       }\r\n\r\n            \r\n    };\r\n\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAExE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAChE,IAAG;IACC;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,SAAS,CAAC;;IAElC;IACA,MAAMM,cAAc,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,SAAS,EAAEQ,QAAQ,EAAE;MACnEK,OAAO,EAAC;QACJ,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,MAAMC,QAAQ,GAAGH,cAAc,CAACI,IAAI,CAACC,GAAG;;IAExC;IACA,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACa,IAAI,CAAC,GAAGZ,OAAO,WAAW,EAAC;MACpDkB,KAAK,EAAEJ,QAAQ;MACfR,KAAK,EAAEA,KAAK;MACZa,IAAI,EAAEZ;IACV,CAAC,CAAC;IAEF,OAAOU,QAAQ,CAACF,IAAI;EACrB,CAAC,QAAOK,KAAK,EAAC;IACbC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACZ;AAGH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}